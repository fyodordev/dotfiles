# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.
#

#
# Sway specific
#
include ~/.config/sway/config.d/*

output eDP-1 scale 1
input "type:keyboard" { 
    xkb_layout us
    xkb_variant altgr-intl
    xkb_options ctrl:swapcaps
}
input "type:touchpad" {
    tap enabled
    natural_scroll enabled
    dwt enabled
    accel_profile "flat" # disable mouse acceleration (enabled by default; to set it manually, use "adaptive" instead of "flat")
    pointer_accel 0.4 # set mouse sensitivity (between -1 and 1)
    scroll_factor 0.6 # Scroll speed
}
# Set background Image
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill

# Your preferred terminal emulator
set $term alacritty
## Font for window titles. Will also be used by the bar unless a different font
## is used in the bar {} block below.
font pango:monospace 0

#
#### Variables
##
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $mod2 Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

## Your preferred application launcher
## Note: pass the final command to swaymsg so that the resulting window can be opened
## on the original workspace that the command was run on.
##set $menu dmenu_path | dmenu | xargs swaymsg exec --
bindcode --release 133 bar hidden_state show; exec "rofi -theme normalmenu -show run -kb-move-char-back 'Ctrl+b' -kb-move-char-forward 'Ctrl+f' && swaymsg bar hidden_state hide"
###bindsym $mod+Menu exec --no-startup-id "rofi -show run -sidebar-mode -modi 'run,window'"
bindsym $mod+space --release exec --no-startup-id "rofi -theme utilmenu -show 'power' -sidebar-mode -modi 'power:~/.config/rofi/menus/rofi-powerscript,theme:~/.config/rofi/menus/rofi-themes,system:~/.config/rofi/menus/rofi-systemscript' -kb-mode-next 'Right' -kb-mode-previous 'Left' -kb-move-char-back 'Ctrl+b' -kb-move-char-forward 'Ctrl+f'"
bindsym $mod2+space --release exec --no-startup-id "rofi -theme utilmenu -show 'screencapture' -sidebar-mode -modi 'screencapture:~/.config/rofi/menus/rofi-screencapture,keyboard:~/.config/rofi/menus/rofi-keyboard,ssh:~/.config/rofi/menus/rofi-ssh' -kb-mode-next 'Right' -kb-mode-previous 'Left' -kb-move-char-back 'Ctrl+b' -kb-move-char-forward 'Ctrl+f'"
#### Key bindings
##
## Basics:
##
# Start a terminal
bindsym $mod+Return exec $term
## Kill focused window
bindsym $mod+Shift+q kill
#    # Drag floating windows by holding down $mod and left mouse button.
#    # Resize them with right mouse button + $mod.
#    # Despite the name, also works for non-floating windows.
#    # Change normal to inverse to use left mouse button for resizing and right
#    # mouse button for dragging.
#    floating_modifier $mod normal
#
#    # Reload the configuration file
#
#    # Exit sway (logs you out of your Wayland session)
#    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
##
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
#bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show


#
# Custom layout manipulation
#

## Create new workspace
#bindsym $mod+n exec new-sway-workspace
bindsym $mod+n exec new-sway-workspace

## Move to new workspace
bindsym $mod+Shift+n exec moveto-new-sway-workspace

# Copy/paste windows
bindsym $mod+y exec sway-copy-window
bindsym $mod+p exec sway-paste-window


#
# Function key binds
#
bindsym XF86MonBrightnessUp exec 'sudo light -A 5; dunstify -h int:value:$(light -G) -a "volume" -t 800 -r 234234 "Brightness $(printf \"%.0f\" $(light -G))%"'
bindsym XF86MonBrightnessDown exec 'sudo light -U 5; dunstify -h int:value:$(light -G) -a "volume" -t 800 -r 234234 "Brightness $(printf \"%.0f\" $(light -G))%"'

bindsym XF86AudioRaiseVolume exec 'pamixer -i 5; dunstify -h int:value:$(pamixer --get-volume) -a "volume" -t 800 -r 234234 "Volume $(printf \"%.0f\" $(pamixer --get-volume))%"'
bindsym XF86AudioLowerVolume exec 'pamixer -d 5; dunstify -h int:value:$(pamixer --get-volume) -a "volume" -t 800 -r 234234 "Volume $(printf \"%.0f\" $(pamixer --get-volume))%"'

#bindsym XF86MonBrightnessUp exec "sudo light -A 5; notify-send \"Brightness\" \"\" -h int:value:$(light -G)"
#bindsym XF86MonBrightnessDown exec "sudo light -U 5; notify-send \"Brightness\" \"\" -h int:value:$(light -G)"

#bindsym XF86AudioRaiseVolume exec "notify-send 'Global Volume' ''"
#bindsym XF86AudioRaiseVolume exec $(pamixer -i 5; notify-send "Global Volume" "" -h int:value:$(pamixer --get-volume))
#bindsym XF86AudioRaiseVolume exec "pamixer -i 5; notify-send \"Global Volume\" \"\" -h int:value:$(pamixer --get-volume)"
#bindsym XF86AudioLowerVolume exec "pamixer -d 5; notify-send 'Global Volume' '' -h int:value:$(pamixer --get-volume)"

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


# Gaps
gaps inner 0
gaps outer 0
smart_gaps on
smart_borders on

#hide_edge_borders none|vertical|horizontal|both|smart
#hide_edge_borders vertical

# >>> Remove title bar and set border <<<
default_border pixel 2
for_window [class="^.*"] border pixel 2
for_window [class="^.*"] default_border pixel 2
#for_window [class="^.*"] border normal 4
#for_window [class=".*"] title_format "<span size="0">%title</span>"

# class                 border  backgr. text    indicator child_border
client.focused          $active_tab_border $active_bg $text $active_border   $active_border
client.focused_inactive $activefaint_tab_border $activefaint_bg $text $activefaint_border   $activefaint_border
client.unfocused        $inactive_tab_border $inactive_bg $text $inactive_border  $inactive_border
client.urgent           $urgent_tab_border $urgent_bg $text $urgent_border   $urgent_border
client.placeholder      $inactive_tab_border #00000000 $text $inactive_border  $inactive_border
# Alt+Tab to cycle between active workspace
bindsym Mod1+Shift+Tab    workspace prev_on_output
bindsym Mod1+Tab          workspace next_on_output

# Analyze exact keypresses: xev -event keyboard
# This doesn't work sadly.
#bindsym Mod1+Tab bar bar-0 mode overlay
#bindcode --release 64 bar bar-0 mode hide;

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    id bar-0
    swaybar_command waybar
    position top
    hidden_state hide
    mode hide
    modifier Mod1
    #modifier none
}

bar {
    swaybar_command waybar
    id bar-1
    position bottom
    hidden_state hide
    mode hide
    modifier Mod1
    #modifier none
}

exec "systemctl --user import-environment; systemctl --user start sway-session.target"
# This causes it to repeat start for some reason.
#exec "systemd-cat --identifier=sway sway"
